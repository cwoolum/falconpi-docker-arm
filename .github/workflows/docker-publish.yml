name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '18 13 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  DOCKER_IMAGE: ${{ github.repository }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
  DOCKER_TARGET_PLATFORM: linux/arm64


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository and fpp submodule
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Docker Buildx      
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
          version: latest

      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
          echo ::set-output name=version::${GITHUB_RUN_NUMBER}

      - name: Docker Login      
        if: success()      
        run: |        
          echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
          
      - name: Run Buildx (push image)      
        if: success()      
        run: |        
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platform }} --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} --file ./Dockerfile --push .
        
